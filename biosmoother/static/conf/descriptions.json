{
    "settings": {
        "replicates": {
            "in_group": "combine the datasets that belong to the same group by...",
            "between_group": "combine the two groups by..."
        },
        "filters": {
            "symmetry": "filter interactions for symmetry",
            "cut_off_bin": "Remainder bins are the last bins in each contig. They are not fullsize, since usually the contig size is not an exact multiple of the bin size. Choose here how to deal with these bins.",
            "show_contig_smaller_than_bin": "Place a bin in contigs that are smaller than the bin-size. With many small contigs, this might slow down smoother significantly.",
            "incomplete_alignments": "Some reads map to more loci on the genome than can be reported by the aligner. In this situation the aligner may choose some strategy to report at least one of the mapping loci. We call these alignments incomplete, they can be shown using this option but may introduce a lot of noise into the heatmap.",
            "ambiguous_mapping": "how to deal with reads that map to more than one loci",
            "directionality": "Filter interactions by directionality.",
            "mapping_q": {
                "val_min": "Filter out all reads with a mapping quality that does not fall into these bounds. The mapping quality represents an aligners confidence into the correctess of an alignment. The highest possible confidence is 254 while the lowest is zero.",
                "val_max": "Filter out all reads with a mapping quality that does not fall into these bounds. The mapping quality represents an aligners confidence into the correctess of an alignment. The highest possible confidence is 254 while the lowest is zero."
            },
            "min_diag_dist": "Filter out all bins closer to the diagonal than this value.",
            "anno_coords_col": "Use annotation coordinates for the columns of the heatmap. Then, each column corresponds to a gene.",
            "anno_coords_row": "Use annotation coordinates for the rows of the heatmap. Then, each row corresponds to a gene.",
            "multiple_annos_in_bin": "For annotation-based coordinate systems: pick how to deal with bins that encompass multiple annotations",
            "anno_in_multiple_bins": "For annotation-based coordinate systems: pick how to deal with annotations that fall into multiple bins."
        },
        "normalization": {
            "normalize_by_coverage": "normalize the coverage tracks in various ways",
            "scale": "scale the final values of the main heatmap; where V is the set of all values, x' a scaled and x the respective unscaled value.",
            "ddd": "Normalize away the distance dependent decay.",
            "ploidy_correct": "Apply ploidy correction to the heatmap data.",
            "ploidy_keep_distinct_group": "During ploidy correction: Keep interactions from contig-pairs, where the two contigs never appear in the same ploidy group. ",
            "ploidy_keep_inter_group": "During ploidy correction: Keep interactions from instance-pairs, where the two instances are in the same group.",
            "ploidy_remove_others": "During ploidy correction: Remove interactions that are not explicitly kept/removed by any of the other options.",
            "ploidy_remove_intra_instance_contig": "During ploidy correction: Remove interactions that are between two different instances of the same contig.",
            "ploidy_coords": "Use the contig order defined by the ploidy file. Otherwise the contig order defined by the sizes file is used.",
            "ddd_show": "Display distance dependent decay as a separate plot.",
            "ddd_all_samples": "Compute distance dependent decay using all bins in the heatmap instead of sampling.",
            "grid_seq_global": "Compute the assoc. slices normalization using all bins in the heatmap instead of sampling.",
            "radicl_local": "Compute the binominal test normalization using only bins from the currently visible area instead of sampling.",
            "ddd_quantile": "Exclude the top and bottom x% of samples when computing the distance dependant decay average.",
            "ice_sparse_slice_filter": "Filter out all slices where less than x percent of bins have a value larger than zero",
            "num_ice_bins": "The number of samples to compute during IC normalization.",
            "ice_mad_max": "Mad max filter",
            "ice_min_nz": "Minimal number of bins with non-zero values for a slice not to be blacked out during ICing",
            "ice_ignore_n_diags": "Ignore the n closest bins to the diagonal during ICing",
            "ice_show_bias": "Display the IC bias as a track.",
            "ice_local": "Only use the visible bins to compute the IC bias.",
            "ddd_samples": "Number of samples to compute for the distance dependant decay average. Will always try to compute as many samples as possible but never more than the maximum picked by this slider. Diagonals with less than the minimum amount will be masked out.",
            "min_interactions": "subtract this many interactions from each bin",
            "color_range": "range of the color scale of the main heatmap",
            "log_base": "logarithmic base for the color scale. Set to zero for a linear scale",
            "p_accept": "the acceptance p-value for the binominal test normalization. Does nothing for other normalizations.",
            "grid_seq_max_bin_size": "Pick the binsize of the samples that are taken to determine Associated slices.",
            "grid_seq_samples": "When querying the coverage of replicates, query the maximal coverage per secion instead of the full coverage of the column.",
            "radicl_seq_samples": "Number of samples used to determine the coverage of each slice. This coverage is then used in the binominal test.",
            "grid_seq_display_background": "Display the sampled background in the secondary data panel.",
            "radicl_seq_display_coverage": "Display the sampled coverage in the secondary data panel.",
            "grid_seq_axis_is_column": "If ticked, the normalization is applied column-wise, else row-wise.",
            "radicl_seq_axis_is_column": "If ticked, the normalization is applied column-wise, else row-wise.",
            "grid_seq_filter_intersection": "Use the minimum number of interactions between datasets (intersection) as background; otherwise use the maximum.",
            "grid_seq_ignore_cis": "Ignore cis interactions during the computation of associated slices.",
            "grid_seq_annotation": "Pick which annotation to compute the background for.",
            "grid_seq_rna_filter_v2": "Acceptable minimal value for the average number of reads per kbp. ",
            "grid_seq_dna_filter_v2": "Acceptable minimal value for the maximal number of reads per kbp. ",
            "normalize_by": "normalize the matrix in various ways"
        },
        "interface": {
            "squared_bins": "Enforce that bins are squares in the dataspace. Does nothing for coordinates systems other than the genome.",
            "do_redraw": "Automatically redraw the heatmap when panning or zooming.",
            "snap_bin_size": "Restrict the allowed binsizes to round numbers. Does nothing for coordinates systems other than the genome.",
            "color_palette": "Pick the color palette for the heatmap.",
            "axis_lables": "The axis lables to display.",
            "update_freq": "Delay between checking if the heatmap needs to be rerendered due to panning or zooming.",
            "zoom_redraw": "Redraw the heatmap if less than x% of the previously rendered heatmap area is visible.",
            "add_draw_area": "Increase the rendered area by x% over the visible area. This way, panning does not trigger re-rendering immediately.",
            "anno_size": "Size of the annotation plot.",
            "raw_size": "Size of the coverage plot.",
            "max_num_bins": "Number of bins to display on the heatmap. This is the main runtime deciding factor.",
            "axis_label_max_char": "Truncate labels to this many characters.",
            "center_tracks_on_bins": "For the secondary data panel: place the points of the line at the center of bins. If this is disabled, two line-points are drawn for every bin, one at the start one at the end.",
            "zero_track_at_ends": "For the secondary data panel: draw an additional line-point at (0/0) and (0/end).",
            "connect_tracks_over_contig_borders": "For the secondary data panel: connect the lines over contig borders.",
            "tracks_log_scale": "For the secondary data panel: display the values on a log-scale",
            "v4c": {
                "norm_by_viewpoint_size": "Normalize the virtual4C tracks by the size of the viewpoint.",
                "do_col": "Compute a Virtual 4C track for the columns of the heatmap.",
                "col": "Set the Viewpoint (on the y-axis) for the Virtual 4C track of the columns.",
                "do_row": "Compute a Virtual 4C track for the rows of the heatmap.",
                "row": "Set the Viewpoint (on the x-axis) for the Virtual 4C track of the rows.",
                "col_from": "The start of the Viewpoint (on the y-axis) in index coordinates (i.e. at the base resolution of the index). Can be set more conveniently using `settings.interface.v4c.col`.",
                "col_to": "The end of the Viewpoint (on the y-axis) in index coordinates (i.e. at the base resolution of the index). Can be set more conveniently using `settings.interface.v4c.col`.",
                "row_from": "The start of the Viewpoint (on the x-axis) in index coordinates (i.e. at the base resolution of the index). Can be set more conveniently using `settings.interface.v4c.col`.",
                "row_to": "The end of the Viewpoint (on the x-axis) in index coordinates (i.e. at the base resolution of the index). Can be set more conveniently using `settings.interface.v4c.col`."
            },
            "min_bin_size": "The minimal size of bins in the main heatmap.",
            "color_low": "The start color of the 'Low to High' palette.",
            "color_high": "The end color of the 'Low to High' palette.",
            "show_hide": {
                "heatmap": "Show or hide an element of the GUI / in the exported picture.",
                "axis": "Show or hide an element of the GUI / in the exported picture.",
                "coords": "Show or hide an element of the GUI / in the exported picture.",
                "regs": "Show or hide an element of the GUI / in the exported picture.",
                "raw": "Show or hide an element of the GUI / in the exported picture.",
                "annotation": "Show or hide an element of the GUI / in the exported picture.",
                "tools": "Show or hide an element of the GUI / in the exported picture.",
                "grid_lines": "Show or hide an element of the GUI / in the exported picture.",
                "indent_line": "Show or hide an element of the GUI / in the exported picture.",
                "contig_borders": "Show or hide an element of the GUI / in the exported picture."
            },
            "fixed_bin_size": "Use 'fixed_bin_size_x' and 'fixed_bin_size_y' as the width and height of bins in the main heatmap instead of computing the binsize from the size of the visible area.",
            "fixed_bin_size_x": "Use this as the width of bins in the main heatmap instead of computing the binsize from the size of the visible area.",
            "fixed_bin_size_y": "Use this as the height of bins in the main heatmap instead of computing the binsize from the size of the visible area.",
            "fixed_number_of_bins": "Use 'fixed_number_of_bins_x' and 'fixed_number_of_bins_y' as the number of bins in a row and column of the main heatmap instead of computing the binsize from the size of the visible area.",
            "fixed_num_bins_x": "Use this as the number of bins in a row of the main heatmap instead of computing the binsize from the size of the visible area.",
            "fixed_num_bins_y": "Use this as the number of bins in a column of the main heatmap instead of computing the binsize from the size of the visible area.",
            "max_undo": "The maximum number of undo steps to keep in memory.",
            "max_detailed_anno_display": "If there are more annotations than X, display bins that contain an annotation instead of displaying the individual annotations.",
            "max_num_bins_factor": "Factor multiplied to `settings.interface.max_num_bins`."
        },
        "export": {
            "coords": "The size of the area coordinates are rendered in for the exported image.",
            "contigs": "The size of the area contig names are rendered in for the exported image.",
            "axis": "The size of the area the secondary axes are rendered in for the exported image.",
            "secondary_stroke_width": "For the secondary data panel: set the stroke width of lines in the exported image.",
            "export_format": "Pick the format that files shall be exported to.",
            "do_export_full": "Export the full matrix instead of merely the visible area.",
            "export_to_server": "Export files to the server instead of downloading them.",
            "prefix": "A common prefix for exported files.",
            "margins": "The margins between panels when exporting to a PNG or SVG picture file.",
            "secondary_x_range": "The visible axis range of the secondary data panel on the x-axis.",
            "secondary_y_range": "The visible axis range of the secondary data panel on the y-axis.",
            "size": "The size of the heatmap panel in the exported image.",
            "spacing": "The spacing between some panels when exporting to a PNG or SVG picture file.",
            "white_background": "Draw a white background when exporting to a PNG or SVG picture file.",
            "print_region": "Print the coordinates of the visible area (content of the navigation bar) on the top of the exported image."
        }
    },
    "replicates": {
        "in_group_a": "options for combining the individual datasets",
        "in_group_b": "options for combining the individual datasets"
    },
    "annotation": {
        "visible_x": "Pick which annotations to display.",
        "visible_y": "Pick which annotations to display.",
        "filter_present_x": "Apply the annotation filter to the columns. Then only interactions that do not overlap the picked annotation on the x-axis are displayed.",
        "filter_present_y": "Apply the annotation filter to the rows. Then only interactions that do not overlap the picked annotation on the y-axis are displayed.",
        "filter_absent_x": "Apply the annotation filter to the columns. Then only interactions that overlap the picked annotation on the x-axis are displayed.",
        "filter_absent_y": "Apply the annotation filter to the rows. Then only interactions that overlap the picked annotation on the y-axis are displayed."
    },
    "coverage": {
        "in_column": "pick which tracks to display on the x/y-axis and to include in the main coverage",
        "in_row": "pick which tracks to display on the x/y-axis and to include in the main coverage"
    },
    "contigs": {
        "annotation_coordinates": "Pick the annotation used for the annotation coordinate system",
        "displayed_on_x": "Pick which contigs to display.",
        "displayed_on_y": "Pick which contigs to display.",
        "displayed_on_x_ploidy": "Pick which contigs to display.",
        "displayed_on_y_ploidy": "Pick which contigs to display."
    },
    "area": "Area that is displayed in the heatmap."
}